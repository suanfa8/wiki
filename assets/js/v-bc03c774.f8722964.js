"use strict";(self.webpackChunkblog_tools=self.webpackChunkblog_tools||[]).push([[7402],{4216:(e,a,s)=>{s.r(a),s.d(a,{data:()=>r});const r={key:"v-bc03c774",path:"/SpringCloud/6-center/6-3-Eureka-Server-Self-Preservation.html",title:"6-3 Eureka 自我保护机制",lang:"en-US",frontmatter:{},excerpt:"",headers:[{level:2,title:"服务频繁启动时 EurekaServer 出现警告",slug:"服务频繁启动时-eurekaserver-出现警告",children:[]},{level:2,title:"自我保护机制",slug:"自我保护机制",children:[]},{level:2,title:"在 Eureka Server 端关闭自我保护机制",slug:"在-eureka-server-端关闭自我保护机制",children:[]},{level:2,title:"微服务修改减短服务心跳的时间",slug:"微服务修改减短服务心跳的时间",children:[]},{level:2,title:"尽管如此关闭自我保护机制还是会出现警告",slug:"尽管如此关闭自我保护机制还是会出现警告",children:[]},{level:2,title:"官方并不建议在生产情况下关闭",slug:"官方并不建议在生产情况下关闭",children:[]},{level:2,title:"Eureka 停止更新",slug:"eureka-停止更新",children:[]}],filePathRelative:"SpringCloud/6-center/6-3-Eureka-Server-Self-Preservation.md",git:{updatedTime:1638143942e3,contributors:[{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:1}]}}},7763:(e,a,s)=>{s.r(a),s.d(a,{default:()=>t});const r=(0,s(6252).uE)('<h1 id="_6-3-eureka-自我保护机制" tabindex="-1"><a class="header-anchor" href="#_6-3-eureka-自我保护机制" aria-hidden="true">#</a> 6-3 Eureka 自我保护机制</h1><h2 id="服务频繁启动时-eurekaserver-出现警告" tabindex="-1"><a class="header-anchor" href="#服务频繁启动时-eurekaserver-出现警告" aria-hidden="true">#</a> 服务频繁启动时 EurekaServer 出现警告</h2><blockquote><p>EMERGENCY! EUREKA MAY BE INCORRECTLY CLAIMING INSTANCES ARE UP WHEN THEY&#39;RE NOT. RENEWALS ARE LESSER THAN THRESHOLD AND HENCE THE INSTANCES ARE NOT BEING EXPIRED JUST TO BE SAFE.</p></blockquote><p><img src="https://tva1.sinaimg.cn/large/008i3skNgy1gwttrsds89j32j2064q5g.jpg" alt="输入图片说明" title="屏幕截图.png"></p><h2 id="自我保护机制" tabindex="-1"><a class="header-anchor" href="#自我保护机制" aria-hidden="true">#</a> 自我保护机制</h2><p>官网地址：https://github.com/Netflix/eureka/wiki/Server-Self-Preservation-Mode</p><ul><li>默认情况下，如果 Eureka Server 在一定时间内（默认 90 秒）没有接收到某个微服务实例的 <strong>心跳</strong>，Eureka Server 将会移除该实例；</li><li>但是当网络分区故障发生时，微服务与 Eureka Server 之间无法正常通信，而微服务本身是正常运行的，此时不应该移除这个微服务，所以引入了自我保护机制；</li><li>Eureka Server 在运行期间会去统计心跳失败比例在 15 分钟之内是否低于 85%，如果低于 85%，Eureka Server 会将这些实例保护起来，让这些实例不会过期；</li><li>这种设计的哲学原理就是「<strong>宁可信其有不可信其无</strong>」！。自我保护模式正是一种针对网络异常波动的安全保护措施，使用自我保护模式能使 Eureka 集群更加的健壮、稳定的运行。</li></ul><h2 id="在-eureka-server-端关闭自我保护机制" tabindex="-1"><a class="header-anchor" href="#在-eureka-server-端关闭自我保护机制" aria-hidden="true">#</a> 在 Eureka Server 端关闭自我保护机制</h2><div class="language-properties ext-properties line-numbers-mode"><pre class="language-properties"><code><span class="token comment"># 关闭自我保护</span>\n<span class="token attr-name">eureka.server.enable-self-preservation</span><span class="token punctuation">=</span><span class="token attr-value">false</span>\n<span class="token comment"># 超时 3s 自动清除</span>\n<span class="token attr-name">eureka.server.eviction-interval-timer-in-ms</span><span class="token punctuation">=</span><span class="token attr-value">3000</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p><img src="https://images.gitee.com/uploads/images/2021/1027/213207_ab7cf696_426516.png" alt="输入图片说明" title="屏幕截图.png"></p><h2 id="微服务修改减短服务心跳的时间" tabindex="-1"><a class="header-anchor" href="#微服务修改减短服务心跳的时间" aria-hidden="true">#</a> 微服务修改减短服务心跳的时间</h2><div class="language-properties ext-properties line-numbers-mode"><pre class="language-properties"><code><span class="token comment"># 用来修改 eureka server 默认接受心跳的最大时间 默认是 90s</span>\n<span class="token attr-name">eureka.instance.lease-expiration-duration-in-seconds</span><span class="token punctuation">=</span><span class="token attr-value">10 </span>\n<span class="token comment"># 指定客户端多久向 eureka server 发送一次心跳 默认是 30s</span>\n<span class="token attr-name">eureka.instance.lease-renewal-interval-in-seconds</span><span class="token punctuation">=</span><span class="token attr-value">5     </span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h2 id="尽管如此关闭自我保护机制还是会出现警告" tabindex="-1"><a class="header-anchor" href="#尽管如此关闭自我保护机制还是会出现警告" aria-hidden="true">#</a> 尽管如此关闭自我保护机制还是会出现警告</h2><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>THE SELF PRESERVATION MODE IS TURNED OFF. THIS MAY NOT PROTECT INSTANCE EXPIRY IN CASE OF NETWORK/OTHER PROBLEMS.\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h2 id="官方并不建议在生产情况下关闭" tabindex="-1"><a class="header-anchor" href="#官方并不建议在生产情况下关闭" aria-hidden="true">#</a> 官方并不建议在生产情况下关闭</h2><p><img src="https://images.gitee.com/uploads/images/2021/1027/213221_41010e1e_426516.png" alt="输入图片说明" title="屏幕截图.png"></p><h2 id="eureka-停止更新" tabindex="-1"><a class="header-anchor" href="#eureka-停止更新" aria-hidden="true">#</a> Eureka 停止更新</h2><p>官方停止更新说明：https://github.com/Netflix/eureka/wiki</p><p>在 1.x 版本项目还是活跃的，但是在 2.x 版本中停止维护，出现问题后果自负。</p><p><img src="https://tva1.sinaimg.cn/large/008i3skNgy1gwtttjk80dj31k209ymzn.jpg" alt="输入图片说明" title="屏幕截图.png"></p>',20),n={},t=(0,s(3744).Z)(n,[["render",function(e,a){return r}]])},3744:(e,a)=>{a.Z=(e,a)=>{const s=e.__vccOpts||e;for(const[e,r]of a)s[e]=r;return s}}}]);