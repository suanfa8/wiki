"use strict";(self.webpackChunkblog_tools=self.webpackChunkblog_tools||[]).push([[2952],{6921:(n,a,s)=>{s.r(a),s.d(a,{data:()=>e});const e={key:"v-320cf186",path:"/RabbitMQ/7-Cluster/7.1-cluster-architecture.html",title:"第 7 章 RabbitMQ 的集群",lang:"en-US",frontmatter:{},excerpt:"",headers:[{level:3,title:"7.1 集群架构",slug:"_7-1-集群架构",children:[]}],filePathRelative:"RabbitMQ/7-Cluster/7.1-cluster-architecture.md",git:{updatedTime:163819854e4,contributors:[{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:3}]}}},5349:(n,a,s)=>{s.r(a),s.d(a,{default:()=>c});var e=s(6252);const t=(0,e._)("h1",{id:"第-7-章-rabbitmq-的集群",tabindex:"-1"},[(0,e._)("a",{class:"header-anchor",href:"#第-7-章-rabbitmq-的集群","aria-hidden":"true"},"#"),(0,e.Uk)(" 第 7 章 RabbitMQ 的集群")],-1),l={class:"table-of-contents"},p=(0,e.Uk)("7.1 集群架构"),i=(0,e.uE)('<h3 id="_7-1-集群架构" tabindex="-1"><a class="header-anchor" href="#_7-1-集群架构" aria-hidden="true">#</a> 7.1 集群架构</h3><h4 id="_7-1-1-普通集群-副本集群" tabindex="-1"><a class="header-anchor" href="#_7-1-1-普通集群-副本集群" aria-hidden="true">#</a> 7.1.1 普通集群(副本集群)</h4><blockquote><p>All data/state required for the operation of a RabbitMQ broker is replicated across all nodes. An exception to this are message queues, which by default reside on one node, though they are visible and reachable from all nodes. To replicate queues across nodes in a cluster --摘自官网</p></blockquote><p>默认情况下:RabbitMQ 代理操作所需的所有数据/状态都将跨所有节点复制。这方面的一个例外是消息队列，默认情况下，消息队列位于一个节点上，尽管它们可以从所有节点看到和访问。</p><ol><li><h5 id="架构图" tabindex="-1"><a class="header-anchor" href="#架构图" aria-hidden="true">#</a> 架构图</h5></li></ol><p><img src="https://images.gitee.com/uploads/images/2021/1027/194304_37f953a6_426516.png" alt="输入图片说明" title="屏幕截图.png"></p><p>核心解决问题: 当集群中某一时刻 master 节点宕机，可以对 Quene 中信息，进行备份。</p><ol start="2"><li><h5 id="集群搭建" tabindex="-1"><a class="header-anchor" href="#集群搭建" aria-hidden="true">#</a> 集群搭建</h5><div class="language-markdown ext-md line-numbers-mode"><pre class="language-markdown"><code><span class="token title important"><span class="token punctuation">#</span> 0.集群规划</span>\n\tnode1: 10.15.0.3  mq1  master 主节点\n\tnode2: 10.15.0.4  mq2  repl1  副本节点\n\tnode3: 10.15.0.5  mq3  repl2  副本节点\n\n<span class="token title important"><span class="token punctuation">#</span> 1.克隆三台机器主机名和ip映射</span>\n\tvim /etc/hosts加入:\n\t\t 10.15.0.3 mq1\n    \t10.15.0.4 mq2\n    \t10.15.0.5 mq3\n\tnode1: vim /etc/hostname 加入:  mq1\n\tnode2: vim /etc/hostname 加入:  mq2\n\tnode3: vim /etc/hostname 加入:  mq3\n\n<span class="token title important"><span class="token punctuation">#</span> 2.三个机器安装rabbitmq,并同步cookie文件,在node1上执行:</span>\n\tscp /var/lib/rabbitmq/.erlang.cookie root@mq2:/var/lib/rabbitmq/\n\tscp /var/lib/rabbitmq/.erlang.cookie root@mq3:/var/lib/rabbitmq/\n\n<span class="token title important"><span class="token punctuation">#</span> 3.查看cookie是否一致:</span>\n\tnode1: cat /var/lib/rabbitmq/.erlang.cookie \n\tnode2: cat /var/lib/rabbitmq/.erlang.cookie \n\tnode3: cat /var/lib/rabbitmq/.erlang.cookie \n\n<span class="token title important"><span class="token punctuation">#</span> 4.后台启动rabbitmq所有节点执行如下命令,启动成功访问管理界面:</span>\n\trabbitmq-server -detached \n\n<span class="token title important"><span class="token punctuation">#</span> 5.在node2和node3执行加入集群命令:</span>\n\t1.关闭       rabbitmqctl stop_app\n\t2.加入集群    rabbitmqctl join_cluster rabbit@mq1\n\t3.启动服务    rabbitmqctl start_app\n\n<span class="token title important"><span class="token punctuation">#</span> 6.查看集群状态,任意节点执行:</span>\n\trabbitmqctl cluster_status\n\n<span class="token title important"><span class="token punctuation">#</span> 7.如果出现如下显示,集群搭建成功:</span>\n\tCluster status of node rabbit@mq3 ...\n\t[{nodes,[{disc,[rabbit@mq1,rabbit@mq2,rabbit@mq3]}]},\n\t{running_nodes,[rabbit@mq1,rabbit@mq2,rabbit@mq3]},\n\t{cluster_name,&lt;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>&quot;rabbit@mq1&quot;</span><span class="token punctuation">&gt;</span></span>&gt;},\n\t{partitions,[]},\n\t{alarms,[{rabbit@mq1,[]},{rabbit@mq2,[]},{rabbit@mq3,[]}]}]\n\n<span class="token title important"><span class="token punctuation">#</span> 8.登录管理界面,展示如下状态:</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br></div></div></li></ol><p><img src="https://images.gitee.com/uploads/images/2021/1027/194344_cf8857ac_426516.png" alt="输入图片说明" title="屏幕截图.png"></p><div class="language-markdown ext-md line-numbers-mode"><pre class="language-markdown"><code><span class="token title important"><span class="token punctuation">#</span> 9.测试集群在node1上,创建队列</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p><img src="https://images.gitee.com/uploads/images/2021/1027/194439_5cee035c_426516.png" alt="输入图片说明" title="屏幕截图.png"></p><div class="language-markdown ext-md line-numbers-mode"><pre class="language-markdown"><code><span class="token title important"><span class="token punctuation">#</span> 10.查看node2和node3节点:</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p><img src="https://images.gitee.com/uploads/images/2021/1027/194428_db111474_426516.png" alt="输入图片说明" title="屏幕截图.png"></p><p><img src="https://images.gitee.com/uploads/images/2021/1027/194513_079888c1_426516.png" alt="输入图片说明" title="屏幕截图.png"></p><div class="language-markdown ext-md line-numbers-mode"><pre class="language-markdown"><code><span class="token title important"><span class="token punctuation">#</span> 11.关闭node1节点,执行如下命令,查看node2和node3:</span>\n\trabbitmqctl stop_app\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><img src="https://images.gitee.com/uploads/images/2021/1027/194513_c96fcbb5_426516.png" alt="输入图片说明" title="屏幕截图.png"></p><p><img src="https://images.gitee.com/uploads/images/2021/1027/194553_1f95ef07_426516.png" alt="输入图片说明" title="屏幕截图.png"></p><h4 id="_7-1-2-镜像集群" tabindex="-1"><a class="header-anchor" href="#_7-1-2-镜像集群" aria-hidden="true">#</a> 7.1.2 镜像集群</h4><blockquote><p>This guide covers mirroring (queue contents replication) of classic queues --摘自官网</p><p>By default, contents of a queue within a RabbitMQ cluster are located on a single node (the node on which the queue was declared). This is in contrast to exchanges and bindings, which can always be considered to be on all nodes. Queues can optionally be made <em>mirrored</em> across multiple nodes. --摘自官网</p></blockquote><p>镜像队列机制就是将队列在三个节点之间设置主从关系，消息会在三个节点之间进行自动同步，且如果其中一个节点不可用，并不会导致消息丢失或服务不可用的情况，提升 MQ 集群的整体高可用性。</p><ol><li><h5 id="集群架构图" tabindex="-1"><a class="header-anchor" href="#集群架构图" aria-hidden="true">#</a> 集群架构图</h5></li></ol><p><img src="https://images.gitee.com/uploads/images/2021/1027/194829_9979cd49_426516.png" alt="输入图片说明" title="屏幕截图.png"></p><ol start="2"><li><h5 id="配置集群架构" tabindex="-1"><a class="header-anchor" href="#配置集群架构" aria-hidden="true">#</a> 配置集群架构</h5><div class="language-markdown ext-md line-numbers-mode"><pre class="language-markdown"><code><span class="token title important"><span class="token punctuation">#</span> 0.策略说明</span>\n\trabbitmqctl set_policy <span class="token url">[<span class="token content">-p &lt;vhost&gt;</span>] [<span class="token variable">--priority &lt;priority&gt;</span>]</span> [--apply-to <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>apply-to</span><span class="token punctuation">&gt;</span></span>] <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">&gt;</span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>pattern</span><span class="token punctuation">&gt;</span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>definition</span><span class="token punctuation">&gt;</span></span>\n\t-p Vhost： 可选参数，针对指定vhost下的queue进行设置\n\tName:     policy的名称\n\tPattern: queue的匹配模式(正则表达式)\n\tDefinition：镜像定义，包括三个部分ha-mode, ha-params, ha-sync-mode\n           \t\tha-mode:指明镜像队列的模式，有效值为 all/exactly/nodes\n                        all：表示在集群中所有的节点上进行镜像\n                        exactly：表示在指定个数的节点上进行镜像，节点的个数由ha-params指定\n                        nodes：表示在指定的节点上进行镜像，节点名称通过ha-params指定\n            \t ha-params：ha-mode模式需要用到的参数\n                ha-sync-mode：进行队列中消息的同步方式，有效值为automatic和manual\n                priority：可选参数，policy的优先级\n                \n<span class="token code keyword">                 </span>\n<span class="token title important"><span class="token punctuation">#</span> 1.查看当前策略</span>\n\trabbitmqctl list_policies\n\n<span class="token title important"><span class="token punctuation">#</span> 2.添加策略</span>\n\trabbitmqctl set_policy ha-all &#39;^hello&#39; &#39;{&quot;ha-mode&quot;:&quot;all&quot;,&quot;ha-sync-mode&quot;:&quot;automatic&quot;}&#39; \n\t说明:策略正则表达式为 “^” 表示所有匹配所有队列名称  ^hello:匹配hello开头队列\n\n<span class="token title important"><span class="token punctuation">#</span> 3.删除策略</span>\n\trabbitmqctl clear_policy ha-all\n\n<span class="token title important"><span class="token punctuation">#</span> 4.测试集群</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br></div></div><hr></li></ol>',23),r={},c=(0,s(3744).Z)(r,[["render",function(n,a){const s=(0,e.up)("RouterLink");return(0,e.wg)(),(0,e.iD)(e.HY,null,[t,(0,e._)("nav",l,[(0,e._)("ul",null,[(0,e._)("li",null,[(0,e.Wm)(s,{to:"#_7-1-集群架构"},{default:(0,e.w5)((()=>[p])),_:1})])])]),i],64)}]])},3744:(n,a)=>{a.Z=(n,a)=>{const s=n.__vccOpts||n;for(const[n,e]of a)s[n]=e;return s}}}]);