"use strict";(self.webpackChunkblog_tools=self.webpackChunkblog_tools||[]).push([[502],{5475:(n,s,a)=>{a.r(s),a.d(s,{data:()=>e});const e={key:"v-56de74d3",path:"/SpringCloud/10-Gateway/10-3-Gatewat-load-loadBalancer.html",title:"",lang:"en-US",frontmatter:{},excerpt:"",headers:[{level:2,title:"10-3 配置路由服务负载均衡",slug:"_10-3-配置路由服务负载均衡",children:[{level:3,title:"动态路由以及负载均衡转发配置",slug:"动态路由以及负载均衡转发配置",children:[]}]}],filePathRelative:"SpringCloud/10-Gateway/10-3-Gatewat-load-loadBalancer.md",git:{updatedTime:1638143942e3,contributors:[{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:1}]}}},889:(n,s,a)=>{a.r(s),a.d(s,{default:()=>p});const e=(0,a(6252).uE)('<h2 id="_10-3-配置路由服务负载均衡" tabindex="-1"><a class="header-anchor" href="#_10-3-配置路由服务负载均衡" aria-hidden="true">#</a> 10-3 配置路由服务负载均衡</h2><p>!&gt; 本节要点： <strong>网关在路由转发的时候也要实现负载均衡。</strong></p><p><img src="https://tva1.sinaimg.cn/large/008i3skNgy1gwu4zem51pj310u09idgu.jpg" alt="输入图片说明" title="屏幕截图.png"></p><p>现有路由配置方式，都是基于服务地址写死的路由转发，能不能 <strong>根据服务名称</strong> 进行路由转发同时实现负载均衡的呢？</p><h3 id="动态路由以及负载均衡转发配置" tabindex="-1"><a class="header-anchor" href="#动态路由以及负载均衡转发配置" aria-hidden="true">#</a> 动态路由以及负载均衡转发配置</h3><div class="language-yaml ext-yml line-numbers-mode"><pre class="language-yaml"><code><span class="token key atrule">spring</span><span class="token punctuation">:</span>\n  <span class="token key atrule">application</span><span class="token punctuation">:</span>\n    <span class="token key atrule">name</span><span class="token punctuation">:</span> gateway\n  <span class="token key atrule">cloud</span><span class="token punctuation">:</span>\n    <span class="token key atrule">consul</span><span class="token punctuation">:</span>\n      <span class="token key atrule">host</span><span class="token punctuation">:</span> localhost\n      <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">8500</span>\n    <span class="token key atrule">gateway</span><span class="token punctuation">:</span>\n      <span class="token key atrule">routes</span><span class="token punctuation">:</span>\n        <span class="token punctuation">-</span> <span class="token key atrule">id</span><span class="token punctuation">:</span> user_route\n          <span class="token comment"># uri: http://localhost:9999/ # 没有负载均衡的配置</span>\n          <span class="token comment"># lb 代表转发后台服务使用负载均衡，users 代表服务注册中心上的服务名</span>\n          <span class="token key atrule">uri</span><span class="token punctuation">:</span> lb<span class="token punctuation">:</span>//users\t\t\t\t\t\t\t\n          <span class="token key atrule">predicates</span><span class="token punctuation">:</span>\n            <span class="token punctuation">-</span> Path=/user/<span class="token important">**</span>\n\n        <span class="token punctuation">-</span> <span class="token key atrule">id</span><span class="token punctuation">:</span> product_route\n          <span class="token comment"># uri: http://localhost:9998/</span>\n          <span class="token comment"># lb(loadbalance) 代表负载均衡转发路由</span>\n          <span class="token key atrule">uri</span><span class="token punctuation">:</span> lb<span class="token punctuation">:</span>//products          \n          <span class="token key atrule">predicates</span><span class="token punctuation">:</span>\n            <span class="token punctuation">-</span> Path=/product/<span class="token important">**</span>\n      <span class="token key atrule">discovery</span><span class="token punctuation">:</span>\n        <span class="token key atrule">locator</span><span class="token punctuation">:</span>\n          <span class="token comment"># 开启根据服务名动态获取路由</span>\n          <span class="token key atrule">enabled</span><span class="token punctuation">:</span> <span class="token boolean important">true</span> \t\t\t\t\t\t\t\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br></div></div><p>注意：<code>discovery.locator.enabled</code> 配置必须开启。</p><p><img src="https://tva1.sinaimg.cn/large/008i3skNgy1gvu862rvsdj32ay0tcafa.jpg" alt="image-20200721110013966"></p><p><img src="https://tva1.sinaimg.cn/large/008i3skNgy1gvu8660q3zj32h60gkta5.jpg" alt="image-20200721110040104"></p>',9),t={},p=(0,a(3744).Z)(t,[["render",function(n,s){return e}]])},3744:(n,s)=>{s.Z=(n,s)=>{const a=n.__vccOpts||n;for(const[n,e]of s)a[n]=e;return a}}}]);