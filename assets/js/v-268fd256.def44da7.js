"use strict";(self.webpackChunkblog_tools=self.webpackChunkblog_tools||[]).push([[7041],{1502:(l,e,i)=>{i.r(e),i.d(e,{data:()=>a});const a={key:"v-268fd256",path:"/Redis/1-NoSQL.html",title:"第 1-6 章",lang:"en-US",frontmatter:{},excerpt:"",headers:[{level:2,title:"1.  NoSQL 的引言",slug:"_1-nosql-的引言",children:[]},{level:2,title:"2. 为什么是 NoSQL",slug:"_2-为什么是-nosql",children:[]},{level:2,title:"3. NoSQL的四大分类",slug:"_3-nosql的四大分类",children:[{level:3,title:"3.1 键值（Key-Value）存储数据库",slug:"_3-1-键值-key-value-存储数据库",children:[]},{level:3,title:"3.2  列存储数据库",slug:"_3-2-列存储数据库",children:[]},{level:3,title:"3.3 文档型数据库",slug:"_3-3-文档型数据库",children:[]},{level:3,title:"3.4 图形（Graph）数据库",slug:"_3-4-图形-graph-数据库",children:[]}]},{level:2,title:"4. NoSQL 应用场景",slug:"_4-nosql-应用场景",children:[]},{level:2,title:"5. 什么是 Redis",slug:"_5-什么是-redis",children:[]},{level:2,title:"6. Redis 的特点",slug:"_6-redis-的特点",children:[]}],filePathRelative:"Redis/1-NoSQL.md",git:{updatedTime:163819854e4,contributors:[{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:3}]}}},1347:(l,e,i)=>{i.r(e),i.d(e,{default:()=>s});const a=(0,i(6252).uE)('<h1 id="第-1-6-章" tabindex="-1"><a class="header-anchor" href="#第-1-6-章" aria-hidden="true">#</a> 第 1-6 章</h1><h2 id="_1-nosql-的引言" tabindex="-1"><a class="header-anchor" href="#_1-nosql-的引言" aria-hidden="true">#</a> 1. NoSQL 的引言</h2><p><strong>NoSQL</strong>（<code>Not Only SQL</code> ），意即 <strong>不仅仅是SQL</strong> ，泛指非关系型的数据库。Nosql 这个技术门类，早期就有人提出，发展至 2009 年趋势越发高涨。</p><h2 id="_2-为什么是-nosql" tabindex="-1"><a class="header-anchor" href="#_2-为什么是-nosql" aria-hidden="true">#</a> 2. 为什么是 NoSQL</h2><p>随着互联网网站的兴起，传统的关系数据库在应付动态网站，特别是超大规模和高并发的纯动态网站已经显得力不从心，暴露了很多难以克服的问题。如</p><ul><li>商城网站中对商品数据频繁查询</li><li>对热搜商品的排行统计</li><li>订单超时问题</li></ul><p>以及微信朋友圈（音频，视频）存储等相关使用传统的关系型数据库实现就显得非常复杂，虽然能实现相应功能但是在性能上却不是那么乐观。nosql 这个技术门类的出现，更好的解决了这些问题，它告诉了世界不仅仅是 sql。</p><h2 id="_3-nosql的四大分类" tabindex="-1"><a class="header-anchor" href="#_3-nosql的四大分类" aria-hidden="true">#</a> 3. NoSQL的四大分类</h2><h3 id="_3-1-键值-key-value-存储数据库" tabindex="-1"><a class="header-anchor" href="#_3-1-键值-key-value-存储数据库" aria-hidden="true">#</a> 3.1 键值（Key-Value）存储数据库</h3><ol><li>说明:</li></ol><ul><li>这一类数据库主要会使用到一个哈希表，这个表中有一个特定的键和一个指针指向特定的数据。</li></ul><ol start="2"><li>特点</li></ol><ul><li>Key/value 模型对于 IT 系统来说的优势在于简单、易部署。</li><li>但是如果 DBA 只对部分值进行查询或更新的时候，Key/value 就显得效率低下了。</li></ul><ol start="3"><li>相关产品</li></ol><ul><li>Tokyo Cabinet/Tyrant,</li><li>Redis</li><li>SSDB</li><li>Voldemort</li><li>Oracle BDB</li></ul><h3 id="_3-2-列存储数据库" tabindex="-1"><a class="header-anchor" href="#_3-2-列存储数据库" aria-hidden="true">#</a> 3.2 列存储数据库</h3><ol><li>说明</li></ol><ul><li>这部分数据库通常是用来应对分布式存储的海量数据。</li></ul><ol start="2"><li>特点</li></ol><ul><li>键仍然存在，但是它们的特点是指向了多个列。这些列是由列家族来安排的。</li></ul><ol start="3"><li>相关产品</li></ol><ul><li>Cassandra、HBase、Riak.</li></ul><h3 id="_3-3-文档型数据库" tabindex="-1"><a class="header-anchor" href="#_3-3-文档型数据库" aria-hidden="true">#</a> 3.3 文档型数据库</h3><ol><li>说明</li></ol><ul><li>文档型数据库的灵感是来自于 Lotus Notes 办公软件的，而且它同第一种键值存储相类似该类型的数据模型是版本化的文档，半结构化的文档以特定的格式存储，比如 JSON。文档型数据库可以看作是键值数据库的升级版，允许之间嵌套键值。而且文档型数据库比键值数据库的查询效率更高。</li></ul><ol start="2"><li>特点</li></ol><ul><li>以文档形式存储</li></ul><ol start="3"><li>相关产品</li></ol><ul><li>MongoDB、CouchDB、 MongoDb(4.x). 国内也有文档型数据库 SequoiaDB，已经开源。</li></ul><h3 id="_3-4-图形-graph-数据库" tabindex="-1"><a class="header-anchor" href="#_3-4-图形-graph-数据库" aria-hidden="true">#</a> 3.4 图形（Graph）数据库</h3><ol><li>说明</li></ol><ul><li>图形结构的数据库同其他行列以及刚性结构的 SQL 数据库不同，它是使用灵活的图形模型，并且能够扩展到多个服务器上。</li><li>NoSQL数据库没有标准的查询语言(SQL)，因此进行数据库查询需要制定数据模型。许多NoSQL数据库都有REST式的数据接口或者查询API。</li></ul><ol start="2"><li><p>特点</p></li><li><p>相关产品</p></li></ol><ul><li>Neo4J、InfoGrid、 Infinite Graph。</li></ul><h2 id="_4-nosql-应用场景" tabindex="-1"><a class="header-anchor" href="#_4-nosql-应用场景" aria-hidden="true">#</a> 4. NoSQL 应用场景</h2><ul><li><p>数据模型比较简单</p></li><li><p>需要灵活性更强的 IT 系统</p></li><li><p>对数据库性能要求较高</p></li><li><p>不需要高度的数据一致性</p></li></ul><h2 id="_5-什么是-redis" tabindex="-1"><a class="header-anchor" href="#_5-什么是-redis" aria-hidden="true">#</a> 5. 什么是 Redis</h2><p><img src="https://tva1.sinaimg.cn/large/008i3skNgy1gw3jbrp3n9j31s80fwn1p.jpg" alt="image-20200623121234046"></p><blockquote><p>Redis is an open source (BSD licensed), in-memory data structure store, used as a database, cache and message broker.</p></blockquote><p>Redis 开源遵循 BSD 基于内存数据存储，被用于作为数据库缓存、消息中间件。</p><ul><li>总结：Redis 是一个内存型的数据库。</li></ul><h2 id="_6-redis-的特点" tabindex="-1"><a class="header-anchor" href="#_6-redis-的特点" aria-hidden="true">#</a> 6. Redis 的特点</h2><ul><li><p>Redis 是一个高性能 key/value 内存型数据库</p></li><li><p>Redis 支持丰富的数据类型</p></li><li><p>Redis 支持持久化</p></li><li><p>Redis 单线程，单进程</p></li></ul>',43),r={},s=(0,i(3744).Z)(r,[["render",function(l,e){return a}]])},3744:(l,e)=>{e.Z=(l,e)=>{const i=l.__vccOpts||l;for(const[l,a]of e)i[l]=a;return i}}}]);