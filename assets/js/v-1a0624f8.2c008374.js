"use strict";(self.webpackChunkblog_tools=self.webpackChunkblog_tools||[]).push([[50],{1993:(e,l,n)=>{n.r(l),n.d(l,{data:()=>a});const a={key:"v-1a0624f8",path:"/SpringCloud/7-communication/7-4-Ribbon-loadBalancer.html",title:"7-4 Ribbon 负载均衡策略",lang:"en-US",frontmatter:{},excerpt:"",headers:[{level:2,title:"Ribbon 负载均衡算法（规则很多）",slug:"ribbon-负载均衡算法-规则很多",children:[]},{level:2,title:"如何修改负载负载均衡策略",slug:"如何修改负载负载均衡策略",children:[{level:3,title:"修改服务的默认负载均衡策略（在客户端进行配置）",slug:"修改服务的默认负载均衡策略-在客户端进行配置",children:[]}]},{level:2,title:"Ribbon 停止维护",slug:"ribbon-停止维护",children:[]}],filePathRelative:"SpringCloud/7-communication/7-4-Ribbon-loadBalancer.md",git:{updatedTime:1638145972e3,contributors:[{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:2}]}}},5053:(e,l,n)=>{n.r(l),n.d(l,{default:()=>g});var a=n(6252);const i=(0,a._)("h1",{id:"_7-4-ribbon-负载均衡策略",tabindex:"-1"},[(0,a._)("a",{class:"header-anchor",href:"#_7-4-ribbon-负载均衡策略","aria-hidden":"true"},"#"),(0,a.Uk)(" 7-4 Ribbon 负载均衡策略")],-1),t={class:"table-of-contents"},o=(0,a.Uk)("Ribbon 负载均衡算法（规则很多）"),r=(0,a.Uk)("如何修改负载负载均衡策略"),s=(0,a.Uk)("修改服务的默认负载均衡策略（在客户端进行配置）"),u=(0,a.Uk)("Ribbon 停止维护"),c=(0,a.uE)('<div class="custom-container tip"><p class="custom-container-title">提示</p><p>Ribbon 的负载均衡是基于客户端的负载均衡。</p></div><h2 id="ribbon-负载均衡算法-规则很多" tabindex="-1"><a class="header-anchor" href="#ribbon-负载均衡算法-规则很多" aria-hidden="true">#</a> Ribbon 负载均衡算法（规则很多）</h2><ul><li><code>RoundRobinRule</code>：<strong>轮训策略（默认规则）</strong>，按顺序循环选择 Server</li><li><code>RandomRule</code>：随机策略，随机选择 Server</li><li><code>AvailabilityFilteringRule</code>：可用过滤策略（应用较多）</li></ul><p>会先过滤由于多次访问故障而处于断路器跳闸状态的服务，还有并发的连接数量超过阈值的服务，然后对剩余的服务列表按照轮询策略进行访问。</p><p><img src="https://tva1.sinaimg.cn/large/008i3skNgy1gvu7jnn2asj326s0m80w2.jpg" alt="image-20200713162940968"></p><ul><li><code>WeightedResponseTimeRule</code>：响应时间加权策略 （应用较多）</li></ul><p>根据平均响应的时间计算所有服务的权重，响应时间越快服务权重越大被选中的概率越高，刚启动时如果统计信息不足，则使用 RoundRobinRule策略，等统计信息足够会切换到。</p><ul><li>RetryRule：重试策略</li></ul><p>先按照 <code>RoundRobinRule</code> 的策略获取服务，如果获取失败则在制定时间内进行重试，获取可用的服务。</p><ul><li>BestAviableRule：最低并发策略</li></ul><p>会先过滤掉由于多次访问故障而处于断路器跳闸状态的服务，然后选择一个并发量最小的服务。</p><h2 id="如何修改负载负载均衡策略" tabindex="-1"><a class="header-anchor" href="#如何修改负载负载均衡策略" aria-hidden="true">#</a> 如何修改负载负载均衡策略</h2><h3 id="修改服务的默认负载均衡策略-在客户端进行配置" tabindex="-1"><a class="header-anchor" href="#修改服务的默认负载均衡策略-在客户端进行配置" aria-hidden="true">#</a> 修改服务的默认负载均衡策略（在客户端进行配置）</h3><p>修改服务默认随机策略，配置的写法如下：</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>服务id.ribbon.NFLoadBalancerRuleClassName=com.netflix.loadbalancer.RandomRule\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>例如：下面的 <code>products</code> 为服务的唯一标识</p><div class="language-properties ext-properties line-numbers-mode"><pre class="language-properties"><code><span class="token attr-name">products.ribbon.NFLoadBalancerRuleClassName</span><span class="token punctuation">=</span><span class="token attr-value">com.netflix.loadbalancer.RandomRule</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p><img src="https://tva1.sinaimg.cn/large/008i3skNgy1gvu7jpgouzj320407yq5m.jpg" alt="image-20200713163722927"></p><h2 id="ribbon-停止维护" tabindex="-1"><a class="header-anchor" href="#ribbon-停止维护" aria-hidden="true">#</a> Ribbon 停止维护</h2>',19),d=(0,a.Uk)("官方停止维护说明："),b={href:"https://github.com/Netflix/ribbon",target:"_blank",rel:"noopener noreferrer"},p=(0,a.Uk)("https://github.com/Netflix/ribbon"),m=(0,a._)("p",null,[(0,a._)("img",{src:"https://tva1.sinaimg.cn/large/008i3skNgy1gvu7jscibvj324m0rcq9m.jpg",alt:"image-20200713195706787"})],-1),h={},g=(0,n(3744).Z)(h,[["render",function(e,l){const n=(0,a.up)("RouterLink"),h=(0,a.up)("OutboundLink");return(0,a.wg)(),(0,a.iD)(a.HY,null,[i,(0,a._)("nav",t,[(0,a._)("ul",null,[(0,a._)("li",null,[(0,a.Wm)(n,{to:"#ribbon-负载均衡算法-规则很多"},{default:(0,a.w5)((()=>[o])),_:1})]),(0,a._)("li",null,[(0,a.Wm)(n,{to:"#如何修改负载负载均衡策略"},{default:(0,a.w5)((()=>[r])),_:1}),(0,a._)("ul",null,[(0,a._)("li",null,[(0,a.Wm)(n,{to:"#修改服务的默认负载均衡策略-在客户端进行配置"},{default:(0,a.w5)((()=>[s])),_:1})])])]),(0,a._)("li",null,[(0,a.Wm)(n,{to:"#ribbon-停止维护"},{default:(0,a.w5)((()=>[u])),_:1})])])]),c,(0,a._)("p",null,[d,(0,a._)("a",b,[p,(0,a.Wm)(h)])]),m],64)}]])},3744:(e,l)=>{l.Z=(e,l)=>{const n=e.__vccOpts||e;for(const[e,a]of l)n[e]=a;return n}}}]);