"use strict";(self.webpackChunkblog_tools=self.webpackChunkblog_tools||[]).push([[9589],{2891:(n,a,s)=>{s.r(a),s.d(a,{data:()=>e});const e={key:"v-153d3898",path:"/SpringCloud/6-center/6-1-Eureka-server.html",title:"6-1 Eureka 服务端开发",lang:"en-US",frontmatter:{},excerpt:"",headers:[{level:2,title:"1、Eureka 简介",slug:"_1、eureka-简介",children:[]},{level:2,title:"2、实践：开发 Eureka Server",slug:"_2、实践-开发-eureka-server",children:[]},{level:2,title:"总结",slug:"总结",children:[]}],filePathRelative:"SpringCloud/6-center/6-1-Eureka-server.md",git:{updatedTime:1638143942e3,contributors:[{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:1}]}}},3224:(n,a,s)=>{s.r(a),s.d(a,{default:()=>p});const e=(0,s(6252).uE)('<h1 id="_6-1-eureka-服务端开发" tabindex="-1"><a class="header-anchor" href="#_6-1-eureka-服务端开发" aria-hidden="true">#</a> 6-1 Eureka 服务端开发</h1><h2 id="_1、eureka-简介" tabindex="-1"><a class="header-anchor" href="#_1、eureka-简介" aria-hidden="true">#</a> 1、Eureka 简介</h2><p>网址：https://github.com/Netflix/eureka/wiki</p><p>Eureka 是 Netflix 开发的服务发现框架，本身是一个基于 REST 的服务。SpringCloud 将它集成在其子项目 Spring-Cloud-Netflix中，以实现 SpringCloud 的服务注册和发现功能。</p><p>Eureka 包含两个组件：</p><ul><li>Eureka Server；</li><li>Eureka Client。</li></ul><p>单体应用 ------&gt; 分类服务、商品服务、订单服务、用户服务......</p><ul><li>Eureka Server 组件： <strong>服务注册中心组件</strong>，管理所有服务，支持所有服务注册；</li><li>Eureka Client 组件：例如：分类服务、商品服务、订单服务（具体业务微服务）。</li></ul><h2 id="_2、实践-开发-eureka-server" tabindex="-1"><a class="header-anchor" href="#_2、实践-开发-eureka-server" aria-hidden="true">#</a> 2、实践：开发 Eureka Server</h2><blockquote><p>所有工具集的使用流程：</p><ol><li>引入依赖</li><li>写配置文件</li><li>加注解</li></ol></blockquote><ol><li>创建项目并引入 Eureka Server 依赖</li></ol><p><img src="https://tva1.sinaimg.cn/large/008i3skNgy1gwtryvmcmbj31320mojsy.jpg" alt="输入图片说明" title="屏幕截图.png"></p><p><img src="https://tva1.sinaimg.cn/large/008i3skNgy1gwtryya26rj30zi0u0gov.jpg" alt="输入图片说明" title="屏幕截图.png"></p><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token comment">&lt;!--引入 Eureka Server--&gt;</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.cloud<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-cloud-starter-netflix-eureka-server<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p><img src="https://images.gitee.com/uploads/images/2021/1027/212526_1aaa8a65_426516.png" alt="输入图片说明" title="屏幕截图.png"></p><ol start="2"><li>编写配置 application.properties</li></ol><p>这个名字很重要：</p><div class="language-properties ext-properties line-numbers-mode"><pre class="language-properties"><code><span class="token attr-name">spring.application.name</span><span class="token punctuation">=</span><span class="token attr-value">eurekaserver </span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><div class="language-properties ext-properties line-numbers-mode"><pre class="language-properties"><code><span class="token comment"># 执行服务端口</span>\n<span class="token attr-name">server.port</span><span class="token punctuation">=</span><span class="token attr-value">8761</span>\n<span class="token comment"># 指定服务名称，唯一标识</span>\n<span class="token attr-name">spring.application.name</span><span class="token punctuation">=</span><span class="token attr-value">eurekaserver</span>\n<span class="token comment"># 指定服务注册中心的地址</span>\n<span class="token attr-name">eureka.client.service-url.defaultZone</span><span class="token punctuation">=</span><span class="token attr-value">http://localhost:8761/eureka</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><ol start="3"><li>开启 Eureka Server，入口类加入注解</li></ol><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@SpringBootApplication</span>\n<span class="token annotation punctuation">@EnableEurekaServer</span>\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Eurekaserver8761Application</span> <span class="token punctuation">{</span>\n    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token class-name">SpringApplication</span><span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token class-name">Eurekaserver8761Application</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p><img src="https://images.gitee.com/uploads/images/2021/1027/212603_64443851_426516.png" alt="输入图片说明" title="屏幕截图.png"></p><ol start="4"><li>访问 Eureka 的服务注册页面</li></ol><ul><li>http://localhost:8761</li></ul><p><img src="https://tva1.sinaimg.cn/large/008i3skNgy1gwtspk64ixj31vd0u0gqm.jpg" alt="输入图片说明" title="屏幕截图.png"></p><ol start="5"><li>虽然能看到管理界面为什么项目启动控制台报错？</li></ol><ul><li>eureka server 服务注册中心 &amp; client 微服务</li></ul><p><img src="https://images.gitee.com/uploads/images/2021/1027/212633_8af655a4_426516.png" alt="输入图片说明" title="屏幕截图.png"></p><ul><li>出现上述问题原因：<code>Eureka</code> 组件包含 <code>Eurekaserver</code> 和 <code>eurekaclient</code>。Server 是一个服务注册中心，用来接受客户端的注册。Client 的特性会让当前启动的服务把自己作为 Eureka 的客户端进行服务中心的注册，当项目启动时服务注册中心还没有创建好，所以找我不到服务的客户端组件就直接报错了，当启动成功服务注册中心创建好了，日后 Client 也能进行注册，就不再报错啦！</li></ul><ol start="6"><li>（作为 <code>Eureka</code> 的服务端）关闭 <code>Eureka</code> 自己注册自己</li></ol><div class="language-properties ext-properties line-numbers-mode"><pre class="language-properties"><code><span class="token attr-name">eureka.client.fetch-registry</span><span class="token punctuation">=</span><span class="token attr-value">false</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>表示不要立即注册。</p><div class="language-properties ext-properties line-numbers-mode"><pre class="language-properties"><code><span class="token attr-name">server.port</span><span class="token punctuation">=</span><span class="token attr-value">8761</span>\n<span class="token attr-name">spring.application.name</span><span class="token punctuation">=</span><span class="token attr-value">eurekaserver</span>\n<span class="token attr-name">eureka.client.service-url.defaultZone</span><span class="token punctuation">=</span><span class="token attr-value">http://localhost:8761/eureka</span>\n<span class="token comment"># 不再将自己同时作为客户端进行注册  </span>\n<span class="token attr-name">eureka.client.register-with-eureka</span><span class="token punctuation">=</span><span class="token attr-value">false</span>\n<span class="token comment"># 关闭作为客户端时从 eureka server 获取服务信息 </span>\n<span class="token attr-name">eureka.client.fetch-registry</span><span class="token punctuation">=</span><span class="token attr-value">false\t\t\t\t  </span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p><img src="https://tva1.sinaimg.cn/large/008i3skNgy1gwtrz65y0mj320w07imzu.jpg" alt="输入图片说明" title="屏幕截图.png"></p><ol start="7"><li>再次启动，当前应用就是一个单纯 Eureka Server，控制器也不再报错</li></ol><p><img src="https://tva1.sinaimg.cn/large/008i3skNgy1gwtrz7lz3jj32c608w432.jpg" alt="输入图片说明" title="屏幕截图.png"></p><h2 id="总结" tabindex="-1"><a class="header-anchor" href="#总结" aria-hidden="true">#</a> 总结</h2><ol><li>每一个 POM 文件里都可以配置 <code>dependencyManagement</code> 标签</li></ol><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>&lt;!-- 全局管理 SpringCloud 版本，并不会引入具体依赖--&gt;\n&lt;dependencyManagement&gt;\n    &lt;dependencies&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;\n            &lt;artifactId&gt;spring-cloud-dependencies&lt;/artifactId&gt;\n            &lt;version&gt;${spring.cloud.version}&lt;/version&gt;\n            &lt;type&gt;pom&lt;/type&gt;\n            &lt;scope&gt;import&lt;/scope&gt;\n        &lt;/dependency&gt;\n    &lt;/dependencies&gt;\n&lt;/dependencyManagement&gt;\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><ol start="2"><li>JDK 选择 1.8 ，SpringBoot 的版本选择 <code>2.2.5.RELEASE</code>；</li><li>启动类上配置 <code>@EnableEurekaServer</code>；</li><li>配置文件里面配置（尤其是后面两个配置）。</li></ol><p>编写配置文件 <code>application.properties</code>:</p><div class="language-properties ext-properties line-numbers-mode"><pre class="language-properties"><code><span class="token attr-name">server.port</span><span class="token punctuation">=</span><span class="token attr-value">8761</span>\n<span class="token attr-name">spring.application.name</span><span class="token punctuation">=</span><span class="token attr-value">eurekaserver</span>\n<span class="token attr-name">eureka.client.service-url.defaultZone</span><span class="token punctuation">=</span><span class="token attr-value">http://localhost:8761/eureka</span>\n<span class="token comment"># 不再将自己同时作为客户端进行注册  </span>\n<span class="token attr-name">eureka.client.register-with-eureka</span><span class="token punctuation">=</span><span class="token attr-value">false</span>\n<span class="token comment"># 关闭作为客户端时从 eureka server 获取服务信息 </span>\n<span class="token attr-name">eureka.client.fetch-registry</span><span class="token punctuation">=</span><span class="token attr-value">false\t\t\t\t  </span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><ul><li><code>spring.application.name</code> 在微服务里面要配置服务，告诉别人自己是谁。</li></ul>',43),t={},p=(0,s(3744).Z)(t,[["render",function(n,a){return e}]])},3744:(n,a)=>{a.Z=(n,a)=>{const s=n.__vccOpts||n;for(const[n,e]of a)s[n]=e;return s}}}]);