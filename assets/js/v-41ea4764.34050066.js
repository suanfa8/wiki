"use strict";(self.webpackChunkblog_tools=self.webpackChunkblog_tools||[]).push([[4042],{938:(n,a,s)=>{s.r(a),s.d(a,{data:()=>t});const t={key:"v-41ea4764",path:"/SpringCloud/1-5/5-environment-setup.html",title:"5-环境搭建",lang:"en-US",frontmatter:{},excerpt:"",headers:[{level:2,title:"版本命名",slug:"版本命名",children:[{level:3,title:"翻译",slug:"翻译",children:[]},{level:3,title:"伦敦地铁站名称 [了解]",slug:"伦敦地铁站名称-了解",children:[]}]},{level:2,title:"版本选择",slug:"版本选择",children:[{level:3,title:"版本选择官方建议",slug:"版本选择官方建议",children:[]}]},{level:2,title:"SpringCloud 环境搭建",slug:"springcloud-环境搭建",children:[{level:3,title:"说明",slug:"说明",children:[]},{level:3,title:"1、创建 Springboot 项目指定版本为 2.2.5 版本",slug:"_1、创建-springboot-项目指定版本为-2-2-5-版本",children:[]},{level:3,title:"2、引入 SpringCloud 的版本管理",slug:"_2、引入-springcloud-的版本管理",children:[]}]}],filePathRelative:"SpringCloud/1-5/5-environment-setup.md",git:{updatedTime:1638143942e3,contributors:[{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:1}]}}},2830:(n,a,s)=>{s.r(a),s.d(a,{default:()=>p});const t=(0,s(6252).uE)('<h1 id="_5-环境搭建" tabindex="-1"><a class="header-anchor" href="#_5-环境搭建" aria-hidden="true">#</a> 5-环境搭建</h1><h2 id="版本命名" tabindex="-1"><a class="header-anchor" href="#版本命名" aria-hidden="true">#</a> 版本命名</h2><ul><li>官网地址：https://spring.io/projects/spring-cloud</li></ul><p>Spring Cloud is an umbrella(伞) project consisting of independent projects with, in principle, different release cadences. To manage the portfolio a BOM (Bill of Materials) is published with a curated set of dependencies on the individual project (see below). The release trains have names, not versions, to avoid confusion with the sub-projects. The names are an alphabetic sequence (so you can sort them chronologically) with names of London Tube stations (&quot;Angel&quot; is the first release, &quot;Brixton&quot; is the second). When point releases of the individual projects accumulate to a critical mass, or if there is a critical bug in one of them that needs to be available to everyone, the release train will push out &quot;service releases&quot; with names ending &quot;.SRX&quot;, where &quot;X&quot; is a number. ---[摘自官网]</p><h3 id="翻译" tabindex="-1"><a class="header-anchor" href="#翻译" aria-hidden="true">#</a> 翻译</h3><ul><li><p>SpringCloud 版本管理方式: 命名方式</p><ul><li>Angel.SR1~6</li><li>Brixton.SR1~6</li><li>Camden.SR1~6</li></ul></li><li><p>SpringCloud 是一个由众多独立子项目组成的大型综合项目，原则每个子项目上有不同的发布节奏，都维护自己发布版本号。为了更好的管理 SpringCloud 的版本，通过一个资源清单 BOM（Bill of Materials)，为避免与子项目的发布号混淆，所以没有采用版本号的方式，而是通过命名的方式。这些名字是按字母顺序排列的。如伦敦地铁站的名称（「天使」是第一个版本，「布里斯顿」是第二个版本，「卡姆登」是第三个版本）。当单个项目的点发布累积到一个临界量，或者其中一个项目中有一个关键缺陷需要每个人都可以使用时，发布序列将推出名称以「.SRX」结尾的「服务发布」，其中「X」是一个数字。</p></li></ul><h3 id="伦敦地铁站名称-了解" tabindex="-1"><a class="header-anchor" href="#伦敦地铁站名称-了解" aria-hidden="true">#</a> 伦敦地铁站名称 [了解]</h3><ul><li>Angel、Brixton、Camden、Dalston、Edgware、Finchley、Greenwich、Hoxton、</li></ul><h2 id="版本选择" tabindex="-1"><a class="header-anchor" href="#版本选择" aria-hidden="true">#</a> 版本选择</h2><h3 id="版本选择官方建议" tabindex="-1"><a class="header-anchor" href="#版本选择官方建议" aria-hidden="true">#</a> 版本选择官方建议</h3><p>https://spring.io/projects/spring-cloud</p><ul><li>Angel 版本：基于 Springboot 1.2.x 版本构建与 1.3 版本不兼容；</li><li>Brixton 版本：基于 Springboot 1.3.x 版本构建与 1.2 版本不兼容，2017 年 Brixton and Angel release 官方宣布报废；</li><li>Camden 版本：基于 Springboot 1.4.x 版本构建并在 1.5 版本通过测试，2018 年 Camden release 官方宣布报废；</li><li>Dalston、Edgware 版本：基于 Springboot1.5.x 版本构建目前不能再 Springboot 2.0.x 版本中使用，Dalston（达尔斯顿）将于 2018 年 12 月官方宣布报废。Edgware 将遵循 Spring Boot 1.5.x 的生命周期结束；</li><li>Finchley 版本：基于 springboot 2.0.x 版本进行构建，不能兼容 1.x 版本；</li><li>Greenwich 版本：基于 springboot 2.1.x 版本进行构建，不能兼容 1.x 版本；</li><li>Hoxton 版本：基于 springboot 2.2.x 版本进行构建。</li></ul><p><img src="https://tva1.sinaimg.cn/large/008i3skNgy1gvu9p7wqpxj320q0dujs8.jpg" alt="image-20200709112427684"></p><h2 id="springcloud-环境搭建" tabindex="-1"><a class="header-anchor" href="#springcloud-环境搭建" aria-hidden="true">#</a> SpringCloud 环境搭建</h2><h3 id="说明" tabindex="-1"><a class="header-anchor" href="#说明" aria-hidden="true">#</a> 说明</h3><ul><li>springboot 2.2.x.RELEASE+</li><li>springcloud Hoxton SR1~6</li><li>java8+</li><li>maven 3.3.6+</li><li>idea 2018.3.5+</li></ul><h3 id="_1、创建-springboot-项目指定版本为-2-2-5-版本" tabindex="-1"><a class="header-anchor" href="#_1、创建-springboot-项目指定版本为-2-2-5-版本" aria-hidden="true">#</a> 1、创建 Springboot 项目指定版本为 2.2.5 版本</h3><p><img src="https://tva1.sinaimg.cn/large/008i3skNgy1gvu9p68iiuj328u0gsjya.jpg" alt="image-20200709115802270"></p><h3 id="_2、引入-springcloud-的版本管理" tabindex="-1"><a class="header-anchor" href="#_2、引入-springcloud-的版本管理" aria-hidden="true">#</a> 2、引入 SpringCloud 的版本管理</h3><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token comment">&lt;!--定义springcloud使用版本号--&gt;</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>properties</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>java.version</span><span class="token punctuation">&gt;</span></span>1.8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>java.version</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>spring-cloud.version</span><span class="token punctuation">&gt;</span></span>Hoxton.SR6<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>spring-cloud.version</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>properties</span><span class="token punctuation">&gt;</span></span>\n<span class="token comment">&lt;!--全局管理springcloud版本,并不会引入具体依赖--&gt;</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencyManagement</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.cloud<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-cloud-dependencies<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>${spring-cloud.version}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>type</span><span class="token punctuation">&gt;</span></span>pom<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>type</span><span class="token punctuation">&gt;</span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">&gt;</span></span>import<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">&gt;</span></span>\n    \t\t<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>\n  \t<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencyManagement</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><p><img src="https://tva1.sinaimg.cn/large/008i3skNgy1gvu9panhdfj31pe06mjsw.jpg" alt="image-20200709120120478"></p><p><img src="https://tva1.sinaimg.cn/large/008i3skNgy1gvu9pewsdhj320g0h2ae5.jpg" alt="image-20200709120209047"></p><p>完成上述操作 SpringBoot 与 SpringCloud 环境搭建完成。接下来就是使用到具体的 SpringCloud 组件，在项目中引入具体的组件即可。</p>',23),e={},p=(0,s(3744).Z)(e,[["render",function(n,a){return t}]])},3744:(n,a)=>{a.Z=(n,a)=>{const s=n.__vccOpts||n;for(const[n,t]of a)s[n]=t;return s}}}]);