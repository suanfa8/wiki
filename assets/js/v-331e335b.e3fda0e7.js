"use strict";(self.webpackChunkblog_tools=self.webpackChunkblog_tools||[]).push([[4851],{6573:(s,n,a)=>{a.r(n),a.d(n,{data:()=>e});const e={key:"v-331e335b",path:"/Redis/15-Redis-Distributed-Session.html",title:"15-Redis实现分布式Session管理",lang:"en-US",frontmatter:{},excerpt:"",headers:[{level:3,title:"15.1 管理机制",slug:"_15-1-管理机制",children:[]},{level:3,title:"15.2 开发 Session 管理",slug:"_15-2-开发-session-管理",children:[]}],filePathRelative:"Redis/15-Redis-Distributed-Session.md",git:{updatedTime:163819854e4,contributors:[{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:3}]}}},4078:(s,n,a)=>{a.r(n),a.d(n,{default:()=>i});const e=(0,a(6252).uE)('<h1 id="_15-redis实现分布式session管理" tabindex="-1"><a class="header-anchor" href="#_15-redis实现分布式session管理" aria-hidden="true">#</a> 15-Redis实现分布式Session管理</h1><h3 id="_15-1-管理机制" tabindex="-1"><a class="header-anchor" href="#_15-1-管理机制" aria-hidden="true">#</a> 15.1 管理机制</h3><blockquote><p>Redis 的 Session 管理是利用 Spring 提供的 Session 管理解决方案，将一个应用 Session 交给 Redis 存储，整个应用中所有 Session 的请求都会去 Redis 中获取对应的 Session 数据。</p></blockquote><p><img src="https://tva1.sinaimg.cn/large/008i3skNgy1gwtp0j37thj31ok0gs0w8.jpg" alt="image-20200628201643358"></p><h3 id="_15-2-开发-session-管理" tabindex="-1"><a class="header-anchor" href="#_15-2-开发-session-管理" aria-hidden="true">#</a> 15.2 开发 Session 管理</h3><ol><li>引入依赖</li></ol><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.session<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-session-data-redis<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><ol start="2"><li>开发 Session 管理配置类</li></ol><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Configuration</span>\n<span class="token annotation punctuation">@EnableRedisHttpSession</span>\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">RedisSessionManager</span> <span class="token punctuation">{</span>\n   \n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><ol start="3"><li>打包测试即可</li></ol>',10),t={},i=(0,a(3744).Z)(t,[["render",function(s,n){return e}]])},3744:(s,n)=>{n.Z=(s,n)=>{const a=s.__vccOpts||s;for(const[s,e]of n)a[s]=e;return a}}}]);