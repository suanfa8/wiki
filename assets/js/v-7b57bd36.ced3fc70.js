"use strict";(self.webpackChunkblog_tools=self.webpackChunkblog_tools||[]).push([[9285],{6965:(e,t,r)=>{r.r(t),r.d(t,{data:()=>n});const n={key:"v-7b57bd36",path:"/SpringCloud/1-5/1-Microservice.html",title:"1-什么是微服务",lang:"en-US",frontmatter:{},excerpt:"",headers:[{level:2,title:"官方定义",slug:"官方定义",children:[]},{level:2,title:"通俗定义",slug:"通俗定义",children:[]}],filePathRelative:"SpringCloud/1-5/1-Microservice.md",git:{updatedTime:1638145972e3,contributors:[{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:2}]}}},4644:(e,t,r)=>{r.r(t),r.d(t,{default:()=>c});var n=r(6252);const a=(0,n._)("h1",{id:"_1-什么是微服务",tabindex:"-1"},[(0,n._)("a",{class:"header-anchor",href:"#_1-什么是微服务","aria-hidden":"true"},"#"),(0,n.Uk)(" 1-什么是微服务")],-1),i=(0,n.Uk)("官网："),s={href:"https://www.martinfowler.com/articles/microservices.html",target:"_blank",rel:"noopener noreferrer"},o=(0,n.Uk)("https://www.martinfowler.com/articles/microservices.html"),l=(0,n.uE)('<div class="custom-container tip"><p class="custom-container-title">以下内容摘自官网</p><p>In short, the microservice architectural style is an approach to developing a single application as <strong>a suite of small services</strong> , each <strong>running in its own process</strong> and communicating with lightweight mechanisms, often an HTTP resource API. These services are <strong>built around business capabilities</strong> and <strong>independently deployable</strong> by fully automated deployment machinery. <strong>There is a bare minimum of centralized management of these services</strong>, which may be written in different programming languages and use different data storage technologies.</p></div><table><thead><tr><th>关键字</th><th>翻译</th></tr></thead><tbody><tr><td>a suite of small services</td><td>一系列微小服务</td></tr><tr><td>running in its own process</td><td>运行在自己的进程里</td></tr><tr><td>built around business capabilities</td><td>围绕自己的业务开发</td></tr><tr><td>independently deployable</td><td>独立部署</td></tr><tr><td>bare minimum of centralized management of these services</td><td>基于分布式管理</td></tr></tbody></table><h2 id="官方定义" tabindex="-1"><a class="header-anchor" href="#官方定义" aria-hidden="true">#</a> 官方定义</h2><p>微服务就是由一系列围绕自己业务开发的微小服务构成，他们独立部署运行在自己的进程里，基于分布式的管理。</p><h2 id="通俗定义" tabindex="-1"><a class="header-anchor" href="#通俗定义" aria-hidden="true">#</a> 通俗定义</h2><p>微服务是一种架构，这种架构是将单个的整体应用程序分割成更小的项目关联的独立的服务。一个服务通常实现一组独立的特性或功能，包含自己的业务逻辑和适配器。各个微服务之间的关联通过暴露 api 来实现。这些独立的微服务不需要部署在同一个虚拟机，同一个系统和同一个应用服务器中。</p><hr><p>笔记：</p><blockquote><p>App 应学项目 分类模块 视频模块 评论模块 用户模块 统计模块... 单体应用</p></blockquote><p>拆分：</p><blockquote><p>分类服务 独立应用 ---&gt; 计算进程里面 ---&gt; 独立部署</p><p>视频服务 基于分布式服务管理</p><p>评论服务</p><p>用户服务</p><p>....服务</p></blockquote>',11),d={},c=(0,r(3744).Z)(d,[["render",function(e,t){const r=(0,n.up)("OutboundLink");return(0,n.wg)(),(0,n.iD)(n.HY,null,[a,(0,n._)("p",null,[i,(0,n._)("a",s,[o,(0,n.Wm)(r)])]),l],64)}]])},3744:(e,t)=>{t.Z=(e,t)=>{const r=e.__vccOpts||e;for(const[e,n]of t)r[e]=n;return r}}}]);