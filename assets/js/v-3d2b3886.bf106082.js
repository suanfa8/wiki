"use strict";(self.webpackChunkblog_tools=self.webpackChunkblog_tools||[]).push([[5958],{6366:(e,t,l)=>{l.r(t),l.d(t,{data:()=>a});const a={key:"v-3d2b3886",path:"/RabbitMQ/6-application/6.2-application-decoupling.html",title:"",lang:"en-US",frontmatter:{},excerpt:"",headers:[{level:3,title:"6.2 应用解耦",slug:"_6-2-应用解耦",children:[]}],filePathRelative:"RabbitMQ/6-application/6.2-application-decoupling.md",git:{updatedTime:163819854e4,contributors:[{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:3}]}}},1470:(e,t,l)=>{l.r(t),l.d(t,{default:()=>s});var a=l(6252);const i=(0,a._)("h3",{id:"_6-2-应用解耦",tabindex:"-1"},[(0,a._)("a",{class:"header-anchor",href:"#_6-2-应用解耦","aria-hidden":"true"},"#"),(0,a.Uk)(" 6.2 应用解耦")],-1),n={class:"table-of-contents"},o=(0,a.Uk)("6.2 应用解耦"),p=(0,a.uE)('<p><code>场景：双11是购物狂节,用户下单后,订单系统需要通知库存系统,传统的做法就是订单系统调用库存系统的接口. </code></p><p><img src="https://images.gitee.com/uploads/images/2021/1027/193749_b845d2c2_426516.png" alt="输入图片说明" title="屏幕截图.png"></p><p>这种做法有一个缺点:</p><p>当库存系统出现故障时,订单就会失败。 订单系统和库存系统高耦合. 引入消息队列</p><p><img src="https://images.gitee.com/uploads/images/2021/1027/193723_672c3021_426516.png" alt="输入图片说明" title="屏幕截图.png"></p><ul><li><p><code>订单系统:</code>用户下单后,订单系统完成持久化处理,将消息写入消息队列,返回用户订单下单成功。</p></li><li><p><code>库存系统:</code>订阅下单的消息,获取下单消息,进行库操作。 就算库存系统出现故障,消息队列也能保证消息的可靠投递,不会导致消息丢失.</p></li></ul>',6),c={},s=(0,l(3744).Z)(c,[["render",function(e,t){const l=(0,a.up)("RouterLink");return(0,a.wg)(),(0,a.iD)(a.HY,null,[i,(0,a._)("nav",n,[(0,a._)("ul",null,[(0,a._)("li",null,[(0,a.Wm)(l,{to:"#_6-2-应用解耦"},{default:(0,a.w5)((()=>[o])),_:1})])])]),p],64)}]])},3744:(e,t)=>{t.Z=(e,t)=>{const l=e.__vccOpts||e;for(const[e,a]of t)l[e]=a;return l}}}]);