"use strict";(self.webpackChunkblog_tools=self.webpackChunkblog_tools||[]).push([[393],{7397:(n,s,a)=>{a.r(s),a.d(s,{data:()=>t});const t={key:"v-5c1637a2",path:"/SpringCloud/9-Hystrix/9-5-Fuse-Implement.html",title:"",lang:"en-US",frontmatter:{},excerpt:"",headers:[{level:2,title:"9-5 服务熔断的实现",slug:"_9-5-服务熔断的实现",children:[]}],filePathRelative:"SpringCloud/9-Hystrix/9-5-Fuse-Implement.md",git:{updatedTime:1638143942e3,contributors:[{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:1}]}}},7427:(n,s,a)=>{a.r(s),a.d(s,{default:()=>e});const t=(0,a(6252).uE)('<h2 id="_9-5-服务熔断的实现" tabindex="-1"><a class="header-anchor" href="#_9-5-服务熔断的实现" aria-hidden="true">#</a> 9-5 服务熔断的实现</h2><p>!&gt; 其实是一个开关装置。如果我们的断路器频繁地被打开，即使是正常的请求，都会触发断路器。如果有正常的请求来，发现可以了，就可以放行断路器。</p><blockquote><p>案例：</p></blockquote><p>服务熔断的实现思路：</p><ul><li>（<strong>在服务提供方</strong>）引入 <code>hystrix</code> 依赖，并开启熔断器(断路器)</li><li>模拟降级方法</li><li>进行调用测试</li></ul><ol><li>项目中引入 <code>hystrix</code> 依赖</li></ol><div class="language-xml ext-xml line-numbers-mode"><pre class="language-xml"><code><span class="token comment">&lt;!-- 引入 hystrix --&gt;</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.cloud<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-cloud-starter-netflix-hystrix<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p><img src="https://tva1.sinaimg.cn/large/008i3skNgy1gvu7xod82yj31zi07edhf.jpg" alt="image-20200716090932981"></p><ol start="2"><li>开启断路器</li></ol><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@SpringBootApplication</span>\n<span class="token comment">// 用来开启断路器</span>\n<span class="token annotation punctuation">@EnableCircuitBreaker</span>  \n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Products9998Application</span> <span class="token punctuation">{</span>\n    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token class-name">SpringApplication</span><span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token class-name">Products9998Application</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p><img src="https://tva1.sinaimg.cn/large/008i3skNgy1gvu7xr0ekfj328m07ewgl.jpg" alt="image-20200716094200460"></p><ol start="3"><li>使用 <code>HystrixCommand</code> 注解实现断路</li></ol><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// 服务熔断</span>\n<span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/product/break&quot;</span><span class="token punctuation">)</span>\n<span class="token annotation punctuation">@HystrixCommand</span><span class="token punctuation">(</span>fallbackMethod <span class="token operator">=</span> <span class="token string">&quot;testBreakFall&quot;</span> <span class="token punctuation">)</span>\n<span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">testBreak</span><span class="token punctuation">(</span><span class="token keyword">int</span> id<span class="token punctuation">)</span><span class="token punctuation">{</span>\n  log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;接收的商品id为: &quot;</span><span class="token operator">+</span> id<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">if</span><span class="token punctuation">(</span>id<span class="token operator">&lt;=</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n    <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span><span class="token string">&quot;数据不合法!!!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span>\n  <span class="token keyword">return</span> <span class="token string">&quot;当前接收商品id: &quot;</span><span class="token operator">+</span>id<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">testBreakFall</span><span class="token punctuation">(</span><span class="token keyword">int</span> id<span class="token punctuation">)</span><span class="token punctuation">{</span>\n  <span class="token keyword">return</span> <span class="token string">&quot;当前数据不合法: &quot;</span><span class="token operator">+</span>id<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><p><img src="https://tva1.sinaimg.cn/large/008i3skNgy1gvu7xsxszcj31zq0k8gqx.jpg" alt="image-20200717090743474"></p><ol start="4"><li>访问测试</li></ol><ul><li>正常参数访问</li><li>错误参数访问</li></ul><p><img src="https://tva1.sinaimg.cn/large/008i3skNgy1gvu7xvckjdj322e06m3zp.jpg" alt="image-20200717090841831"></p><p><img src="https://tva1.sinaimg.cn/large/008i3skNgy1gvu7xy556fj31tu05ogml.jpg" alt="image-20200717091028876"></p><ol start="5"><li>总结</li></ol><p>从上面演示过程中会发现如果触发一定条件断路器会自动打开，过了一点时间正常之后又会关闭。那么断路器打开条件是什么呢？</p><ol start="6"><li>断路器打开条件</li></ol><p>官网：https://cloud.spring.io/spring-cloud-netflix/2.2.x/reference/html/#circuit-breaker-spring-cloud-circuit-breaker-with-hystrix</p><div class="language-markdown ext-md line-numbers-mode"><pre class="language-markdown"><code>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>A service failure in the lower level of services can cause cascading failure all the way up to the user. When calls to a particular service exceed <code>circuitBreaker.requestVolumeThreshold</code> (default: 20 requests) and the failure percentage is greater than <code>circuitBreaker.errorThresholdPercentage</code> (default: &gt;50%) in a rolling window defined by <code>metrics.rollingStats.timeInMilliseconds</code> (default: 10 seconds), the circuit opens and the call is not made. In cases of error and an open circuit, a fallback can be provided by the developer. --摘自官方</p><p>原文翻译之后,总结打开关闭的条件：</p><ol><li>当满足一定的阀值的时候（默认 10 秒内超过 20 个请求次数）；</li><li>当失败率达到一定的时候（默认 10 秒内超过 50% 的请求失败）；</li><li>到达以上阀值，断路器将会开启；</li><li>当开启的时候，所有请求都不会进行转发；</li><li>一段时间之后（默认是 5 秒），这个时候断路器是半开状态，会让其中一个请求进行转发。如果成功，断路器会关闭，若失败，继续开启。重复 4 和 5。</li></ol><p><img src="https://tva1.sinaimg.cn/large/008i3skNgy1gvu7y0f60ij31qs0g60v9.jpg" alt="image-20200717092819616"></p><ol start="7"><li>默认的服务 FallBack 处理方法</li></ol><p>如果为每一个服务方法开发一个降级，对于我们来说，可能会出现大量的代码的冗余，不利于维护。这个时候就需要加入默认服务降级处理方法。</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/product/hystrix&quot;</span><span class="token punctuation">)</span>\n<span class="token annotation punctuation">@HystrixCommand</span><span class="token punctuation">(</span>fallbackMethod <span class="token operator">=</span> <span class="token string">&quot;testHystrixFallBack&quot;</span><span class="token punctuation">)</span> <span class="token comment">//通过HystrixCommand降级处理 指定出错的方法</span>\n<span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">testHystrix</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;接收名称为: &quot;</span> <span class="token operator">+</span> name<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">int</span> n <span class="token operator">=</span> <span class="token number">1</span><span class="token operator">/</span><span class="token number">0</span><span class="token punctuation">;</span>\n  <span class="token keyword">return</span> <span class="token string">&quot;服务[&quot;</span> <span class="token operator">+</span> port <span class="token operator">+</span> <span class="token string">&quot;]响应成功,当前接收名称为:&quot;</span> <span class="token operator">+</span> name<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n<span class="token comment">//服务降级处理</span>\n<span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">testHystrixFallBack</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> port <span class="token operator">+</span> <span class="token string">&quot;当前服务已经被降级处理!!!,接收名称为: &quot;</span><span class="token operator">+</span>name<span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p><img src="https://tva1.sinaimg.cn/large/008i3skNgy1gvu7y2yi52j322m0hujw0.jpg" alt="image-20200716095016332"></p>',31),p={},e=(0,a(3744).Z)(p,[["render",function(n,s){return t}]])},3744:(n,s)=>{s.Z=(n,s)=>{const a=n.__vccOpts||n;for(const[n,t]of s)a[n]=t;return a}}}]);