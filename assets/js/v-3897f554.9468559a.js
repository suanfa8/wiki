"use strict";(self.webpackChunkblog_tools=self.webpackChunkblog_tools||[]).push([[2485],{4282:(n,s,a)=>{a.r(s),a.d(s,{data:()=>t});const t={key:"v-3897f554",path:"/SpringCloud/10-Gateway/10-5-Filter.html",title:"",lang:"en-US",frontmatter:{},excerpt:"",headers:[],filePathRelative:"SpringCloud/10-Gateway/10-5-Filter.md",git:{updatedTime:1638143942e3,contributors:[{name:"suanfa8",email:"45396320+suanfa8@users.noreply.github.com",commits:1}]}}},1377:(n,s,a)=>{a.r(s),a.d(s,{default:()=>e});const t=(0,a(6252).uE)('<h6 id="_5-常用的-filter-以及自定义-filter" tabindex="-1"><a class="header-anchor" href="#_5-常用的-filter-以及自定义-filter" aria-hidden="true">#</a> 5. 常用的 Filter 以及自定义 filter</h6><p>Route filters allow the modification of the incoming HTTP request or outgoing HTTP response in some manner. Route filters are scoped to a particular route. Spring Cloud Gateway includes many built-in GatewayFilter Factories.</p><ol><li>原文翻译</li></ol><ul><li><p>官网：https://cloud.spring.io/spring-cloud-static/spring-cloud-gateway/2.2.3.RELEASE/reference/html/#gatewayfilter-factories</p></li><li><p>路由过滤器允许以某种方式修改传入的 HTTP 请求或传出的 HTTP 响应。路由筛选器的作用域是特定路由。springcloudgateway 包括许多内置的 GatewayFilter 工厂。</p></li></ul><ol start="2"><li>作用</li></ol><ul><li>当我们有很多个服务时，比如下图中的 user-service、order-service、product-service 等服务，客户端请求各个服务的 Api 时，每个服务都需要做相同的事情，比如鉴权、限流、日志输出等。</li></ul><p><img src="https://tva1.sinaimg.cn/large/008i3skNgy1gvu86hacb4j31ra0ew0u3.jpg" alt="image-20200721161002001"></p><p><img src="https://tva1.sinaimg.cn/large/008i3skNgy1gvu86kf5glj31us0fqwfw.jpg" alt="image-20200721161421845"></p><ol start="2"><li>使用内置过滤器</li></ol><p><img src="https://tva1.sinaimg.cn/large/008i3skNgy1gvu86n5ivkj31jq0u0qc8.jpg" alt="image-20200721152425733"></p><ul><li><p>更多参考官网：https://cloud.spring.io/spring-cloud-static/spring-cloud-gateway/2.2.3.RELEASE/reference/html/#gatewayfilter-factories</p></li><li><p>使用方式如下:</p></li></ul><div class="language-yaml ext-yml line-numbers-mode"><pre class="language-yaml"><code><span class="token key atrule">spring</span><span class="token punctuation">:</span>\n  <span class="token key atrule">application</span><span class="token punctuation">:</span>\n    <span class="token key atrule">name</span><span class="token punctuation">:</span> gateway\n  <span class="token key atrule">cloud</span><span class="token punctuation">:</span>\n    <span class="token key atrule">gateway</span><span class="token punctuation">:</span>\n      <span class="token key atrule">routes</span><span class="token punctuation">:</span>\n        <span class="token punctuation">-</span> <span class="token key atrule">id</span><span class="token punctuation">:</span> product_route\n          <span class="token comment">#uri: http://localhost:9998/</span>\n          <span class="token key atrule">uri</span><span class="token punctuation">:</span> lb<span class="token punctuation">:</span>//products     <span class="token comment"># lb: 使用负载均衡策略   products代表注册中心的具体服务名</span>\n          <span class="token key atrule">predicates</span><span class="token punctuation">:</span>\n            <span class="token punctuation">-</span> Path=/product/<span class="token important">**</span>\n            <span class="token comment">#- After=2020-07-30T09:45:49.078+08:00[Asia/Shanghai]</span>\n          <span class="token key atrule">filters</span><span class="token punctuation">:</span>\n            <span class="token punctuation">-</span> AddRequestParameter=id<span class="token punctuation">,</span><span class="token number">34</span>\n            <span class="token punctuation">-</span> AddResponseHeader=username<span class="token punctuation">,</span>chenyn\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><div class="language-markdown ext-md line-numbers-mode"><pre class="language-markdown"><code><span class="token title important"><span class="token punctuation">#</span> 3.使用自定义filter</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Configuration</span>\n<span class="token annotation punctuation">@Slf4j</span>\n<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CustomGlobalFilter</span> <span class="token keyword">implements</span> <span class="token class-name">GlobalFilter</span><span class="token punctuation">,</span> <span class="token class-name">Ordered</span> <span class="token punctuation">{</span>\n    <span class="token annotation punctuation">@Override</span>\n    <span class="token keyword">public</span> <span class="token class-name">Mono</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Void</span><span class="token punctuation">&gt;</span></span> <span class="token function">filter</span><span class="token punctuation">(</span><span class="token class-name">ServerWebExchange</span> exchange<span class="token punctuation">,</span> <span class="token class-name">GatewayFilterChain</span> chain<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;进入自定义的filter&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">if</span><span class="token punctuation">(</span>exchange<span class="token punctuation">.</span><span class="token function">getRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getQueryParams</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;username&quot;</span><span class="token punctuation">)</span><span class="token operator">!=</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">{</span>\n            log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;用户身份信息合法,放行请求继续执行!!!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token keyword">return</span> chain<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>exchange<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span>\n        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;非法用户,拒绝访问!!!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n       <span class="token keyword">return</span> exchange<span class="token punctuation">.</span><span class="token function">getResponse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setComplete</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token annotation punctuation">@Override</span>\n    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getOrder</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token comment">//filter 数字越小filter越先执行</span>\n        <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>           <span class="token comment">//-1  最先执行</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><p><img src="https://tva1.sinaimg.cn/large/008i3skNgy1gvu86r68tqj32600my0yo.jpg" alt="image-20200721164304994"></p><p><img src="https://images.gitee.com/uploads/images/2021/1029/155200_d023cf22_426516.png" alt="输入图片说明" title="屏幕截图.png"></p><p><img src="https://images.gitee.com/uploads/images/2021/1029/155417_c3c8f006_426516.png" alt="输入图片说明" title="屏幕截图.png"></p>',17),p={},e=(0,a(3744).Z)(p,[["render",function(n,s){return t}]])},3744:(n,s)=>{s.Z=(n,s)=>{const a=n.__vccOpts||n;for(const[n,t]of s)a[n]=t;return a}}}]);